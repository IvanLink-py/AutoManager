import psycopg2
from psycopg2.extensions import ISOLATION_LEVEL_AUTOCOMMIT

class DB:
    DB_NAME = "AutoManager"


    def __init__(self):
        try:
            self.conn = psycopg2.connect(dbname=self.DB_NAME, user="postgres", host="192.168.2.164", password="root")
        except:
            self.create_db()
            self.conn = psycopg2.connect(dbname="postgres", user="postgres", host="192.168.2.164", password="root")

    def create_db(self):
        conn = psycopg2.connect(dbname="postgres", user="postgres", host="192.168.2.164", password="root")
        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        conn.autocommit = True
        cur = conn.cursor()

        cur.execute("""

CREATE DATABASE "AutoManager"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LOCALE_PROVIDER = 'libc'
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False; """)

        cur.close()
        conn.close()

        conn = psycopg2.connect(dbname=self.DB_NAME, user="postgres", host="192.168.2.164", password="root")
        conn.set_isolation_level(ISOLATION_LEVEL_AUTOCOMMIT)
        conn.autocommit = True
        cur = conn.cursor()

        cur.execute("""
        
        
CREATE TABLE "route" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	-- Номер маршрута
	"name" VARCHAR(255) NOT NULL,
	-- Актуальность
	"actuality" BOOLEAN NOT NULL,
	PRIMARY KEY("id")
);
COMMENT ON TABLE "route" IS 'Маршрут';
COMMENT ON COLUMN route.name IS 'Номер маршрута';
COMMENT ON COLUMN route.actuality IS 'Актуальность';


CREATE TABLE "trip" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"bus_id" INTEGER NOT NULL,
	"driver_id" INTEGER NOT NULL,
	"schedule_id" INTEGER,
	PRIMARY KEY("id")
);
COMMENT ON TABLE "trip" IS 'Рейс';


CREATE TABLE "stop" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"name" VARCHAR(255) NOT NULL,
	"actuality" BOOLEAN NOT NULL,
	PRIMARY KEY("id")
);
COMMENT ON TABLE "stop" IS 'Остановка';


CREATE TABLE "route_stop" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"route_id" INTEGER NOT NULL,
	"stop_id" INTEGER NOT NULL,
	"index" INTEGER NOT NULL,
	PRIMARY KEY("id")
);

CREATE TABLE "bus" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"number" VARCHAR(255) NOT NULL,
	"mark" VARCHAR(255) NOT NULL,
	PRIMARY KEY("id")
);

CREATE TABLE "driver" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"first_name" VARCHAR(255) NOT NULL,
	"last_name" VARCHAR(255) NOT NULL,
	"surname" VARCHAR(255) NOT NULL,
	PRIMARY KEY("id")
);

CREATE TABLE "schedule" (
	"id" INTEGER NOT NULL UNIQUE GENERATED BY DEFAULT AS IDENTITY,
	"start_time" TIME NOT NULL,
	"week_days" VARCHAR(255) NOT NULL,
	"route" INTEGER NOT NULL,
	PRIMARY KEY("id")
);

ALTER TABLE "route_stop"
ADD FOREIGN KEY("route_id") REFERENCES "route"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "route_stop"
ADD FOREIGN KEY("stop_id") REFERENCES "stop"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "trip"
ADD FOREIGN KEY("bus_id") REFERENCES "bus"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "trip"
ADD FOREIGN KEY("driver_id") REFERENCES "driver"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "schedule"
ADD FOREIGN KEY("route") REFERENCES "route"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE "trip"
ADD FOREIGN KEY("schedule_id") REFERENCES "schedule"("id")
ON UPDATE NO ACTION ON DELETE NO ACTION;""")

        cur.close()
        conn.close()






if __name__ == '__main__':
    db = DB()